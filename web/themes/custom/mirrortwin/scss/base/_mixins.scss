// @file
// Place your mixins here. Feel free to roll your own mixins.

@mixin hover-focus() {
  &:hover,
  &:focus {
    @content;
  }
}


//=== Drawing effect

@mixin btn-border-drawing($color: #ccc, $hover: black, $width: 2px, $vertical: top, $horizontal: left, $duration: 0.25s) {
  box-shadow: inset 0 0 0 $width $color;
  color: $color;
  transition: color $duration $duration/3;
  position: relative;

  &::before,
  &::after {
    border: 0 solid transparent;
    box-sizing: border-box;
    content: '';
    pointer-events: none;
    position: absolute;
    width: 0; height: 0;

    #{$vertical}: 0;
    #{$horizontal}: 0;
  }

  &::before {
    $h-side: if($horizontal == 'left', 'right', 'left');

    border-#{$vertical}-width: $width;
    border-#{$h-side}-width: $width;
  }

  &::after {
    $v-side: if($vertical == 'top', 'bottom', 'top');

    border-#{$v-side}-width: $width;
    border-#{$horizontal}-width: $width;
  }

  &:hover {
    color: $hover;

    &::before,
    &::after {
      border-color: $hover;
      transition: border-color 0s, width $duration, height $duration;
      width: 100%;
      height: 100%;
    }

    &::before { transition-delay: 0s, 0s, $duration; }

    &::after { transition-delay: 0s, $duration, 0s; }
  }
}


// Traverse Color Map

/// Loop through a color map to output defined foreground,
/// background, link, and hover colors
///
/// @example scss – Basic Usage Sass
///   .element {
///     background-color: transparent;
///     @include traverse-color-map(named-color);
///   }
///
/// @example scss – Basic Usage CSS output
///   .element {
///     background-color: transparent;
///     color: black;
///
///     a {
///       color: red;
///     }
///
///     a:hover,
///     a:focus,
///     a:active {
///       color: yellow;
///     }
///   }
///
/// @required
///   Color map named $background-color-map
///   Bootstrap 4 mixin for hover-focus() {}
///
/// @accepts
///   Named color key present in $background-color-map
///   Optional Boolean value for background color output
///

@mixin traverse-color-map($bg-color: white) {
  @if variable-exists(background-color-map) == false {
    @warn 'The required color map `$background-color-map` is not defined';
  }

  // @uses the SASS map $background-color-map defined in _color-loop.scss

  // color background color
  @if color-palette($bg-color, bg) {
    background-color: color-palette($bg-color, bg);
  }

  // color foreground color
  @if color-palette($bg-color, fg) {
    color: color-palette($bg-color, fg);
  }

  // color heading colors
  @if color-palette($bg-color, headings) {
    #{$headings} {
      color: color-palette($bg-color, headings);
    }
  }

  // color link
  @if color-palette($bg-color, link) {
    a:not(.o-btn) {
      color: color-palette($bg-color, link);
      @include hover-focus() {
        text-decoration: none;
      }
    }
  }

  // color link hover
  @if color-palette($bg-color, link-hover) {
    a:not(.o-btn) {
      @include hover-focus() {
        color: color-palette($bg-color, link-hover);
      }
    }
  }
}

