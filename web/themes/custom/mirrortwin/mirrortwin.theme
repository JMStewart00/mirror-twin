<?php

/**
 * @file
 * Add your custom theme override functions here.
 */

/**
 * Implements hook_preprocess_block().
 */
function mirrortwin_preprocess_block(&$variables) {
}

/**
 * Implements template_preprocess_field().
 */
function mirrortwin_preprocess_field(&$variables, $hook) {
}

/**
 * Implements template_preprocess_html().
 *
 * Adds additional classes.
 */
function mirrortwin_preprocess_html(&$variables) {
}

/**
 * Implements template_preprocess_node.
 *
 * Add template suggestions and classes.
 */
function mirrortwin_preprocess_node(&$variables) {
}

/**
 * Implements template_preprocess_page.
 *
 * Add convenience variables and template suggestions.
 */
function mirrortwin_preprocess_page(&$variables) {
}

/**
 * Implements template_preprocess_views_view().
 */
function mirrortwin_preprocess_views_view(&$variables) {
}



/*
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function mirrortwin_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if(!in_array('block__layout_builder', $suggestions) && isset($variables['elements']['#lb-block'])) {
    array_unshift($suggestions , 'block__layout_builder');
  }

  // Provide suggestion for block templates by custom block type.
  if (!empty($variables['elements']['content']['#block_content'])) {
    $block = $variables['elements']['content']['#block_content'];

    // Add `block--BLOCK-TYPE.html.twig`.
    $suggestions[] = 'block__' . $block->bundle();
    $view_mode = $variables['elements']['#configuration']['view_mode'];

    if (!empty($view_mode)) {
      // Add `block--BLOCK-TYPE--VIEW-MODE.html.twig`.
      $suggestions[] = 'block__' . $block->bundle() . '__' . $view_mode;
    }
  }
}
